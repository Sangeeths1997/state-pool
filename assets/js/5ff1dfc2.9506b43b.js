"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9933],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,b=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(b,s(s({ref:t},p),{},{components:r})):n.createElement(b,s({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8188:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1},s="Store",i={unversionedId:"basic_concepts/store",id:"basic_concepts/store",title:"Store",description:"A store is a container for global states. Store implements and encapsulates everything you need to manage your global states including store.setState, store.getState, store.useState, store.subscribe and other functionalities. A store is created by using createStore API as",source:"@site/docs/basic_concepts/store.md",sourceDirName:"basic_concepts",slug:"/basic_concepts/store",permalink:"/state-pool/docs/basic_concepts/store",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/basic_concepts/store.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/state-pool/docs/introduction/getting_started"},next:{title:"Using Store State",permalink:"/state-pool/docs/basic_concepts/using_store_state"}},c={},l=[],p={toc:l};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"store"},"Store"),(0,o.kt)("p",null,"A store is a container for global states. Store implements and encapsulates everything you need to manage your global states including ",(0,o.kt)("inlineCode",{parentName:"p"},"store.setState"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"store.getState"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"store.useState"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"store.subscribe")," and other functionalities. A store is created by using ",(0,o.kt)("inlineCode",{parentName:"p"},"createStore")," API as "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { createStore } from 'state-pool';\n\nconst store = createStore();\n")),(0,o.kt)("h3",null,"Adding states to a store"),(0,o.kt)("p",null,"Since a store is a container for global states, we would eventually need to add global states to it. Store provides ",(0,o.kt)("inlineCode",{parentName:"p"},"store.setState")," API which is used to create a global state and add it to a store by mapping it to a key. ",(0,o.kt)("inlineCode",{parentName:"p"},"store.setState")," takes two required parameters, a key(string) to map to a global state object and the initial value, In addition to those two parameters it takes a third optional parameter which is the configuration object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// Signature\nstore.setState(key: String, initialState: Any, config?: {persist: Boolean})\n")),(0,o.kt)("p",null,"Here is an example showing how to use ",(0,o.kt)("inlineCode",{parentName:"p"},"store.setState")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'store.setState("count", 0);\n')),(0,o.kt)("admonition",{type:"important"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"store.setState")," should be used outside of a react component.")))}u.isMDXComponent=!0}}]);